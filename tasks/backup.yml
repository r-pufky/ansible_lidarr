---
###############################################################################
# Lidarr Backup
###############################################################################
# Backup an existing Lidarr installation.
#
# Reference:
# * https://github.com/NasKar2/freenas-backup-apps/blob/master/lidarrbackup.sh

- name: 'backup | shutdown lidarr for backup'
  ansible.builtin.service:
    name:  'lidarr'
    state: 'stopped'

- name: 'backup | setup staging'
  ansible.builtin.file:
    path:  '{{ lidarr_staging }}'
    mode:  0700
    state: 'directory'

# Include *.db-*, lidarr.pid for completeness; don't restore these.
# archive only operates on paths INCLUDED in archive, hence /*
- name: 'backup | create backup'
  community.general.archive:
    path:
      - '{{ lidarr_config }}/*.db'
      - '{{ lidarr_config }}/*.xml'
    mode: 0700
    dest: '{{ lidarr_staging }}/lidarr-config.tar.gz'

- name: 'backup | retrieve backup'
  ansible.builtin.fetch:
    src:  '{{ lidarr_staging }}/lidarr-config.tar.gz'
    dest: '{{ lidarr_local_backup }}'
    flat: true

- name: 'backup | ENCRYPTION NOTICE'
  ansible.builtin.debug:
    msg: |

      BE SURE TO ENCRYPT BEFORE COMMITING CHANGES.

      ansible-vault encrypt '{{ lidarr_local_backup }}'

- name: 'backup | start lidarr'
  ansible.builtin.service:
    name:  'lidarr'
    state: 'started'

- name: 'backup | cleanup'
  ansible.builtin.file:
    path:  '{{ lidarr_staging }}'
    state: 'absent'
