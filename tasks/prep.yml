---
###############################################################################
# Lidarr Prep
###############################################################################
# *arr services use the same codebase; any bugs or fixes should be checked for
# all related services.

- name: 'Prep | assert SSL requirements'
  when: _lidarr_cfg_enable_ssl.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _lidarr_cfg_ssl_cert_path.parsed | length > 0
    fail_msg: >
      ✘ lidarr_cfg_enable_ssl=true requires
      lidarr_cfg_ssl_cert_path set.

      lidarr_cfg_ssl_cert_path: '{{ _lidarr_cfg_ssl_cert_path.raw }}'

- name: 'Prep | assert update script requirements'
  when: not _lidarr_cfg_update_mechanism.raw
  ansible.builtin.assert:
    quiet: true
    that:
      - _lidarr_cfg_update_script_path.parsed | length > 0
    fail_msg: >
      ✘ lidarr_cfg_update_mechanism=false requires
      lidarr_cfg_update_script_path set.

      lidarr_cfg_update_script_path: '{{ _lidarr_cfg_update_script_path.raw }}'

- name: 'Prep | manage users'
  when: _lidarr_srv_create_user.raw
  ansible.builtin.include_role:
    name: 'r_pufky.deb.users'
    tasks_from: 'role_account_add.yml'
  vars:
    users_role_user: '{{ lidarr_role_user }}'
    users_role_group: '{{ lidarr_role_group }}'

- name: 'Prep | enumerate system user {{ _lidarr_srv_user.raw }}'
  ansible.builtin.user:
    name: '{{ _lidarr_srv_user.raw }}'
  check_mode: true
  changed_when: false
  register: _lidarr_srv_user_query

- name: 'Prep | parse system user UID/GID'
  ansible.builtin.set_fact:
    _lidarr_srv_user: '{{
        _lidarr_srv_user |
        combine({"parsed": _lidarr_srv_user_query.uid})
      }}'
    _lidarr_srv_group: '{{
        _lidarr_srv_group |
        combine({"parsed": _lidarr_srv_user_query.group})
      }}'

- name: 'Prep | stop services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    state: 'stopped'
  failed_when: false
  loop:
    - 'lidarr.service'
